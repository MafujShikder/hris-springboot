type field{
    id:ID
    datatypeId:Int
    inputtypeId:Int
    uid:String
    name:String
    caption:String
    compulsory:String
    isunique:String
    iscalculated:String
    description:String
    calculatedexpression:String
    hashistory:String
    hastarget:String
    fieldrelation:String
    skipinreport:String
    datecreated:String
    lastupdated:String
    fieldGroups:[FieldGroup]
    inputType:InputType
    fieldDataType:FieldDataType
}

extend type Query {
    getFieldById(id:ID!):field
    Field(where:String, orderBy:String):[field]
}

extend type Mutation{
    newField(datatypeId:Int,inputtypeId:Int,uid:String,
    name:String, caption:String, compulsory:String, isunique:String, iscalculated:String,
    description:String, calculatedexpression:String,
    hashistory:String, hastarget:String, fieldrelation:String, skipinreport:String,inputType:ID,fieldDataType:ID, fieldGroup:ID):field!

    deleteField(id:ID!):String

    updateField(id:ID!, datatypeId:Int, inputtypeId:Int, uid:String, name:String, caption:String, compulsory:String,
    isunique:String, iscalculated:String, description:String, calculatedexpression:String,
    hashistory:String, hastarget:String, fieldrelation:String, skipinreport:String,inputType:ID,fieldDataType:ID, fieldGroup:ID):field!,


}

