type FriendlyReport{
    id:ID
    seriesId:Int
    uid:String
    name:String
    description:String
    sort:Int
    ignoreskipinreport:String
    usetargets:String
    showdeficitsurplus:String
    dateCreated:String
    lastUpdated:String
    type:String
    sql_statement:String
    javascript:String
    stylesheet:String
    relationalFilters:[RelationalFilter]
    arithmeticFilters:[ArithmeticFilter]
}
extend type Query {
    getFriendlyReportById(id:ID!):FriendlyReport
    FriendlyReport(where:String, sort:String):[FriendlyReport]!
}

extend type Mutation {
    newFriendlyReport(seriesId:Int,
    uid:String,
    name:String,
    description:String,
    sort:Int,
    ignoreskipinreport:String,
    usetargets:String
    showdeficitsurplus:String,
    type:String,
    sql_statement:String,
    javascript:String,
    stylesheet:String,
    relationalFilterId:ID,
    arithmeticFilterId:ID):FriendlyReport!

    deleteFriendlyReport(id:ID!):String

    updateFriendlyReport(id:ID!,
    seriesId:Int,
    uid:String,
    name:String,
    description:String,
    sort:Int,
    ignoreskipinreport:String,
    usetargets:String,
    showdeficitsurplus:String,type:String,
    sql_statement:String,
    javascript:String,
    stylesheet:String,
    relationalFilterId:ID,
    arithmeticFilterId:ID):FriendlyReport
}